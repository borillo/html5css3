section#sass
  h2 CSS preprocessors

  pre
    code.
      $redBlood: #dde0514;
      $size: 300px;

      .class {
        background-color: $redBlood;
        width: $size;
      }

section
  h2 Sass
  p How to (with Ruby)

  pre
    code.
      // Compile to CSS
      sass styles.scss styles.css

      // Watch your SCSS
      sass –watch styles.scss

  a(href="lab-guide.html#sublime-installing-packages", target="_blank").annotation Integration with Sublime

section
  h2 Sass
  p Operations and default functions

  pre
    code.
      $moreRed = $color + #A00;

      $oneHalf : $size / 2;
      $shorter : $length – 3em;

      // Color functions
      mix($color1, $color2)
      darken($color, 20%)

      // Math functions:
      floor($size / 2);

section
  h2 Sass
  p Mixins and paremetric mixins

  .row-fluid
    pre.span6
      code.
        @mixin stuff {
          line-height: $paragraphLine;
          width: $size;
        }

        @mixin coolGradient(<b>$color1</b>, <b>$color2</b>) {
          background-color: <b>$color1</b>;
          background: -moz-linear-gradient(top,  <b>$color1</b> 5%, <b>$color2</b> 90%);
          background: -webkit-linear-gradient(top,  <b>$color1</b> 5%, <b>$color2</b> 90%);
          ...
        }

        #footer {
          @include stuff;
          <b>@include coolGradient(#1ac, #6a9)</b>;
        }

    pre.span6
      code.
        #footer {
          line-height: 1.7em;
          width: 100px;
          background-color: #1ac;
          background: -moz-linear-gradient(top,  #1ac 5%, #6a9 90%);
          background: -webkit-linear-gradient(top,  #1ac 5%, #6a9 90%);
          ...
        }

section
  h2 Sass
  p Custom functions

  pre
    code.
      @function moreGreen($color) {
        @return $color + #030;
      }


      #footer {
        background-color: moreGreen(#576);
      }

  pre
    code.
      #footer {
        background-color: #5a6;
      }


section
  h2 Sass
  p Nesting

  .row-fluid
    pre.span6
      code.
        .content {
          font-size: 14px;
          ul {
            list-style: none;
            & > li {
              display: block;
            }
          }
        }

    pre.span6
      code.
        .content {
          font-size: 14px;
        }

        .content ul {
          list-style: none;
        }

        .content ul > li {
          display: block;
        }

section
  h2 Sass
  p Namespaces

  .row-fluid
    pre.span6
      code.
        .content {
          background: {
            color: white;
            image: url('nice-bg.png');
            size: cover;
          }
        }

    pre.span6
      code.
        .content {
          background-color: white;
          background-image: url("nice-bg.png");
          background-size: cover;
        }


section
  h2 Sass
  p Class extension

  .row-fluid
    pre.span6
      code.
        .button {
          width: 20px;
          border-radius: 2px;
        }

        .navbar .button {
          color: white;
        }

        .big-button {
          @extend .button;
          width: 30px;
        }

    pre.span6
      code.
        .button, .big-button {
          width: 20px;
          border-radius: 2px;
        }

        .navbar .button, .navbar .big-button {
          color: white;
        }

        .big-button {
          width: 30px;
        }

section
  h2 Sass
  p Indented syntax

  .row-fluid
    pre.span6
      code.
        @mixin table-base {
          th {
            text-align: center;
            font-weight: bold;
          }
          td, th {padding: 2px}
        }

        @mixin left($dist) {
          float: left;
          margin-left: $dist;
        }

        #data {
          @include left(10px);
          @include table-base;
        }

    pre.span6
      code.
        =table-base
          th
            text-align: center
            font-weight: bold
          td, th
            padding: 2px

        =left($dist)
          float: left
          margin-left: $dist

        #data
          +left(10px)
          +table-base

section
  h2 Sass
  p Control directives

  pre
    code.
      .class {
        @if $type == ocean {
          color: blue;
        }
      }

      @for $i from 1 through $number {
        .item-\#{$i} {
          width: 500px/$i;
        }
      }

section
  h2 Compass
  p Sass framework

  pre
    code.
      @import "compass";

      // CSS3 mixins
      .container {
        @include background-image(linear-gradient(#FFF, #000));

        @include transition-property(color);
        @include transition-duration(.5s)
        ...
      }

      // Sprite generation
      $icons: sprite-map("icons/*.png");
      .links{
        background: $icons;
      }


section
  h2 Compass
  p Sass framework

  pre
    code.
      @import "compass";

      // Text replacement
      li.hidden {
        @import replace-text($image);
      }

      // Image dimension
      div {
        width: image-width($image) * 1.2;
      }

      // Sticky footer
      @import sticky-footer(60px, "#my_footer");

section
  h2 More syntactic sugar

  .row-fluid
    .span6
      p LESS:
      pre
        code.
          @import "bootstrap.less";

          @myBlue = #12F;

          .my-background(@color) {
            background-color: @color + #100;
          }

          .class {
            .my-background(@myBlue)
            div {
              width: 100px;
          }
    .span6
      p Stylus:
      pre
        code.
          @import "layout.styl";

          myBlue = #12F

          my-background(color)
            background-color: color + #100

          .class
            my-background(myBlue)
            div
              width: 100px

section(data-state="lab")
  h2 Lab: Sass
  p Refactor a CSS stylesheet with Compass