section
  h2 AJAX

  p Asynchronous requests

  pre
    code.
      > function get(url, callback) {
           var request = new XMLHttpRequest();
           request.open("GET", url, true);

           request.onreadystatechange = function () {
              if (request.readyState === 4 &amp;&amp; request.status === 200) {
                 callback(request.responseText);
              }
           };

           request.send();
        }

      > get('http://www.google.com', function (data) {
           console.log(data);
        })

section
  h2 AJAX

  p Send POST messages:

  pre
    code.
      > function post(url, msg, callback) {
           var request = new XMLHttpRequest();
           request.open("POST", url, true);

           request.onreadystatechange = function () {
              if (request.readyState === 4 &amp;&amp; request.status === 200) {
                 callback(request.responseText);
              }
           };

           request.setRequestHeader("Content-type","application/x-www-form-urlencoded");
           request.send(msg);
        }

      post('http://www.google.com', 'val1=1&amp;val2=2', function (data) {
         console.log(data);
      })      

section
  h2 AJAX

  p Cross-site problems: JSONP + CORS
