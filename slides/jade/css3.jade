extend modules/layout

include modules/mixins

append title
  title CSS3

append slides
  section
    h1 CSS3

  section
    h2 W3C's recommendation
    p Don't use it (yet)

  section
    h2 Current status
    ul
      li <strong>Explorer (9+):</strong> -ms-*
      li <strong>Firefox:</strong> -moz-*
      li <strong>Chrome, Safari:</strong> -webkit-*
      li <strong>Opera (10+):</strong> -o-*


  section
    h2 A tale of browser parts
    table.big-table
      thead
        tr
          th Browser
          th Layout engine
          th Javascript engine
      tbody
        tr
          td Chrome
          td Webkit
          td V8
        tr
          td Safari
          td Webkit
          td Nitro
        tr
          td Firefox
          td Gecko
          td TraceMonkey (3.5),
            | <br/>
            | JÃ¤gerMonkey (4+)
        tr
          td Internet Explorer
          td Trident
          td Chakra
        tr
          td Android Browser
          td Webkit
          td V8

  section
    h2 CSS3 browser support
    p Reasonable support in browsers
    p
      a(href="http://delicious.com/html5css3/support") http://delicious.com/html5css3/support
    p CSS and JS tricks to support legacy browsers

  section
    h2 Pixel perfect isn't necessary!
    p Shadows, gradients, transitions, rounded corners...

  section(data-state="lab")
    h2 Lab: CSS3 maker
    p Play with the new CSS styles

  section
    mixin browserSupport('All', '3.5+', '3.2+', '7+', '9.5+')
    h2 New selectors
    p Later general sibling
    pre
      code.
        h2 ~ p {
          color: orange;
        }
    #ex-general-sibling
      style
        #ex-general-sibling .header { font-weight: bold; }
        #ex-general-sibling .header ~ p { color: blue;}
      p.header A header
      p This p is styled
      div This is a div
      p This p is also styled

  section
    h2 New selectors
    table
      tr
        td [foo~="bar"]
        td &lt;div foo="<span style="color: red">bar</span> whatever"&gt;
      tr
        td [foo^="bar"]
        td &lt;div foo="<span style="color: red">bar</span>tender"&gt;
      tr
        td [foo$="bar"]
        td &lt;div foo="tool<span style="color: red">bar</span>"&gt;
      tr
        td [foo*="bar"]
        td &lt;div foo="sylla<span style="color: red">bar</span>y"&gt;
      tr
        td [foo|="bar"]
        td &lt;div foo="<span style="color: red">bar</span>-tender"&gt;

  section
    section
      mixin browserSupport('All', '3.5+', '3.2+', '9+', '9.5+')
      h2 New pseudo-classes
      table
        tr
          td :root
          td Root element (<html>)
        tr
          td :only-child
          td Applies if the element is the only child
        tr
          td :empty
          td Applies to empty elements
        tr
          td :not
          td Negates a simple element
    section
      h2 New pseudo-classes warning
      p :not
      pre
        code.
          .element:not(p) {
            color: orange;
          }
      #ex-not
        style
          #ex-not .ex-not:not(p) {
            color: orange;
          }
        span.ex-not I am a span
        p.ex-not I'm a paragraph
        ul.ex-not
          li I'm in a list
    section
      h2 New pseudo-classes
      p :only-child
      pre
        code.
          li:only-child {
            color: orange;
          }
      #ex-only-child
        style
          #ex-only-child li:only-child {
            color: orange;
          }
        ul
          li I have no siblings
        br
        br
        ol
          li I have a brother
          li I have a sister

  section
    section
      h2 UI elements' states
      p :enabled
      p :disabled
      p :checked
    section
      h2 UI elements' states
      p :enabled
      p :disabled
      p :checked
      pre
        code.
          :enabled {
            background-color: #cdc;
          }
          :disabled {
            background-color: #dcc;
          }
          :checked {
            width: 5em;
          }
      #ex-ui-states
        style
          #ex-ui-states :checked {
            width: 5em;
          }
          #ex-ui-states input:enabled {
            background-color: #cdc;
          }
          #ex-ui-states input:disabled {
            background-color: #dcc;
          }
        input(disabled)
        input
        form
          input(type="radio", value=1, name="radio")
          input(type="radio", value=1, name="radio")


  section
    h2 Element-preserving
    p :first-of-type
    p :last-of-type
    p :nth-of-type(n)
    p :only-of-type

  section
    h2 Reverse counting
    p :nth-last-child(n)
    p :nth-last-of-type

  section
    h2 Style selected text
    p New pseudo-elements
    p ::selection
    p ::-moz-selection
    p ::-webkit-selection

  section
    section#target-slide
      mixin browserSupport('All', '3.5+', '3.2+', '?', '9.5+')
      h2 :target
      pre
        code.
          #{'<div id="my_stuff">'}
          #{'  <p>Ey, look at me!</p>'}
          #{'</div>'}
          #{'<a href="#my_stuff">Go there</a>'}
      pre
        code.
          div:target {
            background-color: gray;
          }
      style
        #target-slide:target {
          background-color: gray;
        }
    section
      a(href="#target-slide") Go there!

  section
    mixin browserSupport('All', 'All', 'All', '9+', '10.5+')
    h2 Border radius
    p {radius} <br>
      | {topleft, bottomright} {topright, bottomleft } <br>
      | {topleft} {topright} {bottomright} {bottomleft}
    pre
      code.
        .container {
          border: 10px solid orange;
          -moz-border-radius: 10px;
          -webkit-border-radius: 10px;
          border-radius: 10px;
        }
    #ex-border-radius
      style
        #ex-border-radius {
          background-color: orange;
          border: 20px solid orange;
          -moz-border-radius: 20px;
          -webkit-border-radius: 20px;
          height: 100px;
        }
  section
    h2 border-radius circles
    p Circles as <strong>very</strong> rounded rectangles
    div(style="width: 600px;\
     height: 600px;\
     position: fixed;\
     top: 80%;\
     left: 50%;\
     border-radius: 50%;\
     background-color: rgb(255,181,21);\
     z-index: -10;")
    pre
      code.
        .circle {
          width: 100px;
          height: 100px;
          border-radius: 50%;
        }

  section(data-state="lab")
    h2 Lab: Badges
    p Add badges to a button bar that display data

  section
    mixin browserSupport('All', '3.5+', 'All', '9+', '10.5+')
    h2 box-shadow
    p {x offset} {y offset} {blur-radius} {color} <br>
      | {x offset} {y offset} {blur} {spread} {color} <br>
      | {shadow1}, {shadow2}, {shadow3}...
    pre
      code.
        .container {
          -moz-box-shadow: 10px 30px 5px #000;
          -webkit-box-shadow: 10px 30px 5px #000;
          box-shadow: 10px 30px 5px #000;
        }
    #ex-box-shadow
      style
        #ex-box-shadow {
          -moz-box-shadow: 10px 30px 5px #000;
          -webkit-box-shadow: 10px 30px 5px #000;
          box-shadow: 10px 30px 5px #000;
          height: 100px;
        }

  section
    mixin browserSupport('All', '3.5+', 'All', '10+', '9.5+')
    h2 text-shadow
    p {x offset} {y offset} {blur-radius} {color} <br>
      | {text-shadow1}, {text-shadow2}, ...
    pre
      code.
        .container {
          text-shadow: 5px 5px 5px #000;
        }
    #ex-text-shadow
      style
        #ex-text-shadow h3 {
          text-shadow: 5px 5px 5px #000;
        }
      h3 I have a shadow

  section
    mixin browserSupport('10+', '3.6+', '5.1+', '10+', '11.1+')
    h2 gradient
    pre
      code.
        .block {
          background: black; /* old browsers */
          background: -moz-linear-gradient(top left, white, blue 5%, black);
          background: -ms-linear-gradient(top left, white, blue 5%, black);
          background: -o-linear-gradient(top left, white, blue 5%, black);
          background: -webkit-gradient(linear, 0 0, 100% 100%, from(white), color-stop(0.05, blue), to(black));
          background: -webkit-linear-gradient(top left, white, blue 5%, black);
          background: linear-gradient(top left, white, blue 5%, black);
          filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='white', endColorstr='black',GradientType=0 ); /* ie */
        }
    #ex-linear-gradient
      style
        #ex-linear-gradient {
          height: 100px;
          background: -moz-linear-gradient(top, #3F3F3F 10%, orange 90%);
          background: -webkit-linear-gradient(top, #3F3F3F 10%, orange 90%);
        }



  section
    mixin browserSupport('10+', '3.6+', '5.1+', '10+', '12+')
    h2 Radial gradients
    pre
      code.
        background-color: #0017ab;

        background: -moz-radial-gradient(30% 50%, 40px 40px, #0017ab, #85c2ff 60%);
        /*...*/
        background: radial-gradient(30% 50%, 40px 40px, #0017ab, #85c2ff 60%)

    #ex-radial-gradient
      style
        #ex-radial-gradient {
          height: 100px;
          background: -moz-radial-gradient(30% 50%, 40px 40px, #777, orange 60%);
          background: -webkit-radial-gradient(30% 50%, 100px 100px, #777, orange 60%);
        }

  section
    mixin browserSupport('All', 'All', 'All', '9+', '9.5+')
    h2 rgba
    p rgba<strong>(red, blue, green, alpha)</strong>
    pre
      code.
        .using-opacity {
          opacity: .5;
        }
        .using-rgba {
          background-color: rgba(218, 37, 29, .5);
        }
    #ex-rgba
      .using-opacity OPACITY
      <br>
      .using-rgba RGBA
    style
      .using-opacity {
        background-color: rgb(218, 37, 29);
        opacity: .3;
        color: black;
      }

      .using-rgba {
        background-color: rgba(218, 37, 29, .3);
        color: black;
      }

  section
    h2 Wherever a color fits in
    p <strong>background, color, border, shadow</strong>
    pre
      code.
        .block {
          background: rgb(218, 37, 29); /* fallback */
          background: rgba(218, 37, 29, .5);
          text-shadow: 0 0 10px rgba(0, 0, 0, .5);
        }

  section(data-state="lab")
    h2 Lab: CSS3 buttons
    p Repeat the buttons from previous module using just CSS3

  section
    mixin browserSupport('4+', '2+', '3.1+','8+', '9.5+')
    h2 box-sizing
    p content-box | border-box | inherit
    pre
      code.
        * {
          box-sizing: border-box;
        }

  section
    h2 box-sizing
    p content-box | border-box | inherit
    pre
      code.
        .box-model {
          width: 200px;
          height: 100px;
          padding: 50px;
          border-width: 20px;
        }
    div
      style
        .box-model {
          width: 200px;
          height: 100px;
          display: inline-block;
          margin: 20px;
          padding: 50px;
          border: 20px solid #333;
          background-color: rgb(255,181,21);
        }
      .box-model(style="box-sizing: content-box;")
      .box-model(style="box-sizing: border-box;")

  section
    mixin browserSupport('All', '3.6+', 'All', '9+', '10.5+')
    h2 Multiple background images
    p background-image: {image1}, {image2}, ...
    pre
      code.
        background: url(image1.png) 10% 15% no-repeat,
                    url(image2.png) 80% 70% no-repeat;
    #ex-multiple-bg
      style
        #ex-multiple-bg {
          height: 200px;
          background: url(assets/img/html5.svg) 10% 15% no-repeat,
                      url(assets/img/css3.svg) 80% 70% no-repeat;
          background-size: auto 100px, auto 70px;
        }

  section
    section
      mixin browserSupport('All', '3.6+', '4.1+', '9+', '9.5+')
      h2 background-size
      p {length} {percentage} {auto} {contain} {cover}
      pre
        code.
          .container {
            background: url(image.png) 40% 40% no-repeat;
            background-size: 100px;
          }
      #ex-bg-size
        style
          #ex-bg-size {
            height: 200px;
            background: url(assets/img/css3.svg) no-repeat 40% 40%;
            background-size: 100px;
          }
    section
      mixin browserSupport('All', '3.6+', '4.1+', '9+', '9.5+')
      h2 background-size
      p <strong>contain</strong>
      pre
        code.
          .container {
            background: url(image.png) 40% 40% no-repeat;
            background-size: contain;
          }
      #ex-bg-size-2
        style
          #ex-bg-size-2 {
            height: 200px;
            background: url(assets/img/css3.svg) no-repeat 40% 40%;
            background-size: contain;
          }
    section
      mixin browserSupport('All', '3.6+', '4.1+', '9+', '9.5+')
      h2 background-size
      p <strong>cover</strong>
      pre
        code.
          .container {
            background: url(image.png) 40% 40% no-repeat;
            background-size: cover;
          }
      #ex-bg-size-3
        style
          #ex-bg-size-3 {
            height: 200px;
            background: url(assets/img/css3.svg) no-repeat 40% 40%;
            background-size: cover;
          }
  section
    mixin browserSupport('All', '3.5+', 'All', '10+', '10.5+')
    h2 border-image
    p {image-url} {top-width} {right-width} <br />
      |  {bottom-width} {left-width} <br />
      |  {horizontal-effect} {vertical-effect}
    pre
      code.
        .container {
          border: 20px solid #b1563c; /* Fallback */
          border-image: url(image1.png) 30;
        }
    #ex-border-image
      style
        #ex-border-image  {
          height: 100px;
          border: 40px solid #b1563c;
          border-image: url(assets/img/html5.svg) 30;
        }
  section
    mixin browserSupport('All', '3.5+', '3.2+', '6+', '10+')
    h2 @font-face
    pre
      code.
        @font-face {
          font-family: 'permanentmarker';
          src: url('pm.eot'); /* IE */
          src: local('permanentmarker'),
                 url('pm.ttf') format('truetype');
        }

        h1 {
            font-family: permanentmarker;
        }
    #ex-font-face
      style
        @font-face {
            font-family: 'permanentmarker';
            src: url('assets/font/PermanentMarker-webfont.ttf') format('truetype');
            font-weight: normal;
            font-style: normal;
        }
        #ex-font-face h3 {
          font-family: permanentmarker;
          color: black;
        }
      h3 Permanent Marker

  section
    h2 Font formats
    p The current de facto standard is <strong>Web Open Font Format (.woff)</strong>
    table.big-table
      thead
        tr
          | <th></th> <th>eot</th> <th>ttf/otf</th> <th>woff</th> <th>svg</th>
      tbody
        tr
          | <td>Chrome</td>
          | <td>no</td> <td>4+</td> <td>5+</td> <td>4+</td>
        tr
          | <td>Safari</td>
          | <td>no</td> <td>3.1+</td> <td>5.1+</td> <td>3.1+</td>
        tr
          | <td>Firefox</td>
          | <td>no</td> <td>3.5+</td> <td>3.6+</td> <td>no</td>
        tr
          | <td>Internet Explorer</td>
          | <td>5+</td> <td>9+</td> <td>9+</td> <td>no</td>
        tr
          | <td>Android</td>
          | <td>no</td> <td>2.2+</td> <td>no</td> <td>yes</td>
        tr
          | <td>iPhone</td>
          | <td>no</td> <td>no</td> <td>no</td> <td>yes</td>

  section
    h2 Font features

    style
      @font-face {
        font-family: 'Trocchi';
        src: url('assets/font/Trocchi-webfont.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
      }

      @font-face {
          font-family: 'Linux';
          src: url('assets/font/LinLibertine_RI.woff') format('truetype');
          font-weight: normal;
          font-style: normal;
      }

      #font-features .ligs-on {
        -webkit-font-feature-settings: "liga", "dlig", "hlig";
        -webkit-font-variant-ligatures: common-ligatures;
      }

      #font-features .trocchi {
        font-family: 'Trocchi';
      }

      #font-features .libertine {
        font-family: 'Linux';
      }

    table.big-table#font-features
      thead
      tbody
        tr
          td Kerning off
          td
            h3.trocchi YAWAVA
        tr
          td Kerning off
          td
            h3.trocchi(style="text-rendering: optimizeLegibility;") YAWAVA
        tr
          td Glyphs off
          td
            h3.libertine affidavit Quiet style detection
        tr
          td Glyphs on
          td
            h3.libertine.ligs-on affidavit Quiet style detection
  section
    h2 Flash of unstyled text

    p <strong>Firefox and Opera</strong> show the next font until it is downloaded

    p <strong>IE and Webkit</strong> do not show anything

  section
    h2 Font repositories

    p
      a(href="http://fontsquirrel.com") <strong>Squirrel font</strong>
    p
      a(href="http://google.com/webfonts") <strong>Google Web Fonts</strong>

  section
    h2 Font-face icons

    p Place icons inside a custom font

    style
      @font-face {
        font-family: 'IconicFill';
        src: url('assets/font/iconic_fill.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
      }

      .iconic {
        font-family: 'IconicFill';
      }
    p
      span.iconic &#xe06a;
      span.iconic &#xe033;
      span.iconic &#x00b6;
      span.iconic &#x2717;
      span.iconic &#xe02e;
      span.iconic &#xe01b;
      span.iconic &#xe04d;

  section
    h2 sFIR icons

    p HTML
    pre
      code.
        #{'<span class="icon icon-mail"></span>'}
        #{'<span class="icon icon-star"></span>'}

    p CSS
    pre
      code.
        .icon {
          background: url('icons-sprite.png') no-repeat;
          width: 0px;
          height: 12px;
          display: inline-block;
        }

        .icon-mail {
          background-position: -10px -40px;
        }
        ...
    #ex-font-icons
      span.iconic(style="font-size: 40px;") &#x2709;
      span.iconic(style="font-size: 40px;") &#x2605;

  section
    h2 Font-face icons

    p HTML
    pre
      code.
        #{'<span class="icon icon-mail"></span>'}
        #{'<span class="icon icon-star"></span>'}

    p CSS
    pre
      code.
        @font-face {
          font-family: 'iconic';
          ...
        }

        .icon  {  font-family: iconic;  }

        .icon-mail:before {
          content: 'â';
        }
    #ex-font-icons
      span.iconic(style="font-size: 40px;") &#x2709;
      span.iconic(style="font-size: 40px;") &#x2605;

  section
    h2 Iconic fonts

    ul
      li
        a(href="http://somerandomdude.com/work/iconic/") Iconic
      li
        a(href="http://fico.lensco.be/") Fico
      li
        a(href="http://fortawesome.github.com/Font-Awesome/") Font Awesome
      li
        a(href="http://glyphicons.com/") Glyphicons
      li
        a(href="http://fontello.com/") Fontello (font packer)

  section
    h2 Beware

    p.text-left <strong>Font files sizes:</strong> You don't need everything!
    p.text-left <strong>Arbitrary key-bindings</strong>
    p.text-left <strong>Non-semantic content</strong> (aria-hidden)


  section(data-state="lab")
    h2 Lab: Fonts

    p Change the fonts in the previous lab

  section
    mixin browserSupport('All', '7+', 'All', '6+', '9+')
    h2 text-overflow

    p text-overflow: <strong>ellipsis | clip</strong>

    pre
      code.
        p {
          width: 100px;
          height: 20px;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

    #ex-text-overflow
      style
        #ex-text-overflow p {
          width: 90%;
          white-space: nowrap;
          overflow: hidden;
        }
      p(style="text-overflow: ellipsis").
        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore

  section
    mixin browserSupport('All', 'All', 'All', 'No', 'No')
    h2 user-select

    p user-select: <strong>all | text | none</strong>

    pre
      code.
        body {
          user-select: none;
        }

        p {
          user-select: text;
        }

    #ex-user-select
      style
        #ex-user-select .unselectable {
          -webkit-user-select: none;
        }

      p.unselectable Lorem impum unselectablis

  section
    mixin browserSupport('All', '4+', 'All', 'No', 'No')
    h2 resize

    p resize: <strong>none | both | horizontal | vertical</strong>

    pre
      code.
        div {
          <strong>resize: both;
          overflow: scroll;</strong>
        }
        textarea {
          <strong>resize: none;</strong>
        }

    #ex-resizable
      style
        #ex-resizable textarea {
          display: block;
          width: 50%;
          margin-left: auto;
          margin-right: auto;
        }
      textarea(style="resize: none;") Unresizable
      textarea(style="resize: horizontal;") Horizontal
      textarea(style="resize: vertical;") Vertical

  section
    mixin browserSupport('All', '4+', 'All', 'No', 'No')
    h2 Transitions

    p CSS transitions allow property changes in CSS values to occur smoothly over a specified duration.

    pre
      code.
        a {
          color: #000;
        }

        a:hover, a:focus {
          color:#00f;
        }

    //- #ex-transitions-none
    //-   style
    //-     #ex-transitions-none a {
    //-       color: #000;
    //-     }

    //-     #ex-transitions-none a:hover {
    //-       color: #00f;
    //-     }
    //-   strong
    //-     a Hover

  section
    h2 An example
    pre
      code.
        a {
          color: #000;
          -webkit-transition: color 1s ease-in;
          -moz-transition: color 1s ease-in;
          transition: color 1s ease-in;
        }

        a:hover, a:focus {
          color: #00f;
        }
    #ex-transitions
      style
        #ex-transitions a {
          color: #000;
        }
        #ex-transitions .smooth {
          -webkit-transition: color 1s ease-in;
          -moz-transition: color 1s ease-in;
          transition: color 1s ease-in;
        }

        #ex-transitions a:hover {
          color: #00f;
        }
      strong
        a Hover
      strong
        a.smooth  Hover

  section
    h2 transition

    p {property} {duration} {timing function} {delay} <br>
      | {transition1}, {transition2}, ...

    pre
      code.
        a {
          -webkit-transition:   color 1s ease-in,
                    background .3s ease;
          -moz-transition:  color 1s ease-in,
                    background .3s ease;
          transition:     color 1s ease-in,
                    background .3s ease;
        }

  section
    h2 all

    pre
      code.
        a {
          -webkit-transition: all .3s linear;
          -moz-transition: all .3s linear;
          transition: all .3s linear;
        }

        a:hover, a:focus {
          color: #030;
          background: #690;
        }

  section
    h2 transition-timing-function

    p default | linear | ease | <strong>ease-in | ease-out | ease-in-out</strong> | cubic-bezier(x1, y1, x2, y2)

    #ex-timing-functions
      style

        #ex-timing-functions .cont {
          width: 90%;
          margin-left: auto;
          margin-right: auto;
        }

        #ex-timing-functions .cont .block {
          background-color: #eee;
          border-radius: 5px;
          width: 20%;
          font-size: 50%;
          margin-bottom: 5px;

          -webkit-transition: all 1s;
        }

        #ex-timing-functions .cont:hover .block {
          width: 100%;
          background-color: #edd;
          border-radius: 10px;
        }

        #ex-timing-functions .cont .linear {
          -webkit-transition-timing-function: linear;
        }

        #ex-timing-functions .cont .ease-in {
          -webkit-transition-timing-function: ease-in;
        }

        #ex-timing-functions .cont .ease-out {
          -webkit-transition-timing-function: ease-out;
        }

        #ex-timing-functions .cont .ease-io {
          -webkit-transition-timing-function: ease-in-out;
        }

        #ex-timing-functions .cont .bezier {
          -webkit-transition-timing-function: cubic-bezier(0,1,1,0);
        }

      .cont
        .block Default
        .block.linear Linear
        .block.ease-in Ease-in
        .block.ease-out Ease-out
        .block.ease-io Ease-io
        .block.bezier Bezier

  section
    h2 transition-delay

    p If two time lapses are given, the second one corresponds to the delay

    pre
      code.
        a {
          -webkit-transition: color .2s ease-in .5s;
          -moz-transition: color .2s ease-in .5s;
          transition: color .2s ease-in .5s;
        }

  section
    h2 Animatable properties

    p background, border, position, color, font, size,
    p margin, padding, opacity, <strong>transformation</strong>,
    p z-index, zoom

  section
    h2 CSS transition or Javascript animation?

    p CSS Transitions
    ul
      li Declared in the CSS
      li Simpler syntax
      li Transitions are faster
      li The animation can be transparently interrupted
    p jQuery animate()
    ul
      li Not limited to simple animations
      li Support for all browsers

  section
    mixin browserSupport('All', '3.5+', 'All', '9+', '10.5+')
    h2 transformation
    p transform: <strong>rotate | scale | skew | translate</strong>

  section
    h2 rotate
    p transform: <strong>rotate(degrees | radians)</strong>

    pre
      code.
        .block {
          -webkit-transform: rotate(20deg);
          -moz-transform: rotate(20deg);
          transform: rotate(20deg);
        }

    #ex-rotate(style="height: 150px;\
      margin-top: 20px;")
      div(style="height: 150px;\
        background-color: orange;\
        -webkit-transform: rotate(-10deg);")

  section
    h2 transform-origin

    p transform-origin:
    p <strong>[ {offset} | left | center | right ]</strong>
    p <strong>[ {offset} | top | center | bottom ]</strong>

    pre
      code.
        .center {
          -webkit-transform: rotate(20deg);
          -webkit-transform-origin: 0 100%;
          -moz-transform: rotate(20deg);
          -moz-transform-origin: 0 100%;
        }

    #ex-rotate-origin(style="height: 150px;")
      div(style="height: 150px;\
        background-color: orange;\
        -webkit-transform: rotate(15deg);\
        -webkit-transform-origin: left bottom;")

  section
    h2 transform-origin (II)

    p <strong>(0, 0)</strong> top left
    p <strong>(100%, 100%)</strong> bottom right
    p <strong>(50%, 50%)</strong> center center <strong>(default)</strong> negative values are allowed

  section
    h2 translate

    p transform: <strong>translate(x,y) | translatex(x) | translatey(y)</strong>

    pre
      code.
        .block {
          -moz-transform: translate(20px, 50px);
          -webkit-transform: translate(20px, 50px);
          transform: translate(20px, 50px);
        }

    #ex-translate(style="height: 150px;")
      div(style="height: 150px;\
        background-color: orange;\
        -webkit-transform: translate(30px, 50px);")


  section
    h2 Combinations

    pre
      code.
        .block {
          -webkit-transform: translate(-100px, 100px) rotate(15deg);
          -moz-transform: translate(-100px, 100px) rotate(15deg);
          -o-transform: translate(-100px, 100px) rotate(15deg);
        }
    #ex-combinations(style="height: 150px;")
      div(style="height: 150px;\
        background-color: orange;\
        -webkit-transform: translate(-100px, 100px) rotate(15deg);")

  section
    h2 IE < 9 rotation

    p Valid values:<strong>0, 1, 2 or 3</strong> which will rotate the element 0, 90, 180 or 270 degrees respectively

    pre
      code.
        .ierotate {
          -webkit-transform: rotate(-90deg);
          -moz-transform: rotate(-90deg);
          transform: rotate(-90deg);
          filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
        }

  section
    h2 scale

    p transform:<strong>scale(x, y) | scalex(x) | scaley(y)</strong>

    ul
      li <strong>&lt; 1:</strong> zoom in
      li <strong>&gt; 1:</strong> zoom out
      li <strong>negative value:</strong> flip

    pre
      code.
        .block {
          -webkit-transform: scale(0.75);
          -moz-transform: scale(0.75);
          transform: scale(0.75);
        }

    #ex-scale(style="height: 150px;")
      div(style="height: 150px;\
        background-color: orange;\
        -webkit-transform: scale(0.75);")

  section
    h2 skew

    p transform:<strong>skew(x, y) | skewx(x) | skewy(y)</strong>

    pre
      code.
        .skewblock {
          -webkit-transform: skew(-20deg, 0);
          -moz-transform: skew(-20deg, 0);
          transform: skew(-20deg, 0);
        }

    #ex-skew(style="height: 150px;")
      div(style="height: 150px;\
        background-color: orange;\
        -webkit-transform: skew(-20deg, 0);")

  section
    mixin browserSupport('12+', '10+', '4+', '10+', 'No')
    h2 3D transforms

    pre
      code.
        translate3d(x, y, z), translateZ(z)
        scale3d(x, y, z), scaleZ(z)
        rotate3d(x, y, z, angle)
        perspective(p)
        matrix3d(m)

  section
    h2 Drawing with CSS
    p 200 lines of CSS + 30 lines of HTML
    iframe(src="assets/html/pure-css.html",
      style="width:500px; height: 500px;")
    p.source
      a(href="http://darcyclarke.me/dev/html5/") Source: Darcy Clarke

  section(data-state="lab")
    h2 Lab: Transitions

    p Add CSS transitions to the proposed page

  section
    h2 Important notice

    p These techniques should be use moderately

  section
    mixin browserSupport('All', '5+', '4+', '10+', '12+')
    h2 animation

    pre
      code.
        @-webkit-keyframes bounce {
          from {
            left: 0px;
          }
          to {
            left: 200px;
          }
        }

        div {
          -webkit-animation-name: bounce;
          -webkit-animation-duration: 4s;
          -webkit-animation-iteration-count: 10;
          -webkit-animation-direction: alternate;
          -webkit-animation-timing-function: ease-in;
        }

    #ex-animation(style="height: 150px;")
      style
        @-webkit-keyframes bounce {
          from {
            left: 10%;
          }
          to {
            left: 70%;
          }
        }
        #ex-animation {
          position: relative;
        }
        #ex-animation .animated {
          height: 150px;
          background-color: orange;
          border-radius: 5px;
          width: 150px;
          position: absolute;

          -webkit-animation-name: bounce;
          -webkit-animation-duration: 4s;
          -webkit-animation-iteration-count: 10;
          -webkit-animation-direction: alternate;
          -webkit-animation-timing-function: ease-in;
        }
      .animated


  section
    h2 webkit-animation-direction

    p -webkit-animation-direction: <strong>normal | alternate</strong>

  section
    h2 animation frames

    pre
      code.
        @-webkit-keyframes pulse {
         0% {
           background-color: red;
           -webkit-transform: scale(1.0) rotate(0deg);
         }
         33% {
           background-color: blue;
           -webkit-transform: scale(1.1) rotate(-5deg);
         }
         67% {
           background-color: green;
           -webkit-transform: scale(1.1) rotate(5deg);
         }
         100% {
           background-color: red;
           -webkit-transform: scale(1.0) rotate(0deg);
         }
        }
    #ex-animation-frames
      style
        @-webkit-keyframes pulse {
         0% {
           background-color: red;
           -webkit-transform: scale(1.0) rotate(0deg);
         }
         33% {
           background-color: blue;
           -webkit-transform: scale(1.1) rotate(-5deg);
         }
         67% {
           background-color: green;
           -webkit-transform: scale(1.1) rotate(5deg);
         }
         100% {
           background-color: red;
           -webkit-transform: scale(1.0) rotate(0deg);
         }
        }
        #ex-animation-frames .pulsing {
          -webkit-animation-name: pulse;
          -webkit-animation-duration: 4s;
          -webkit-animation-iteration-count: 10;
          color: black;
        }
      p.pulsing This paragraph should pulse. Pulsing is the new blink. You heard it here first.

  section(data-state="lab")
    h2 Lab: Animations

    p Reproduce the Mac buttons with CSS3 animations
  section
    section
      mixin browserSupport('All', 'All', 'All', '8+', 'All')
      h2 display: table

      .row-fluid
        pre.span6
          code.
            #main {
              display: table;
            }

            #nav {
              display: table-cell;
            }

            #content {
              display: table-cell;
            }
        pre.span6
          code.
            #{'<div id="main">'}
              #{'<div id="nav"> '}
                navigation column content...
              #{'</div>'}
              #{'<div id="content">'}
                main article contentâ¦
              #{'</div>'}
            #{'</div>'}

      #ex-display-table
        style
         #ex-display-table .pcell {
          display: table-cell;
          padding: 6px 15px;
         }
        p.pcell navigation column content...
        p.pcell article content...
    section
      h2 display:table
      p Vertical alignment
      pre
        code.
          #content {
            display: table-cell;
            vertical-align: middle;
          }
      #ex-table-vertical
        style
         #ex-table-vertical .pcell {
          display: table-cell;
          padding: 6px 15px;
          vertical-align: middle;
         }
        p.pcell Now you can align
          br
          | me correctly...
        p.pcell ...and everything looks fine.

  section
    h2 display table values

    p <strong>table | table-row | table-cell |</strong>
    p table-row-group (tbody) | table-header-group (thead) | table-footer-group (tfoot) | table-caption | table-column | table-column-group

  section
    mixin browserSupport('All', 'All', 'All', '10+', '11.1+')
    h2 Multiple column layout

    pre
      code.
        #content {
          -moz-column-count: 3;
          -moz-column-gap: 20px;
          -webkit-column-count: 3;
          -webkit-column-gap: 20px;
          column-count: 3;
          column-gap: 20px;
        }
    #ex-multicolumn
      style
        #ex-multicolumn {
          font-size: 50%;
          -webkit-column-count: 3;
          -webkit-column-gap: 20px;
        }

      p Bacon ipsum dolor sit amet ham hock tail shank, tenderloin jerky biltong pork beef ribs short loin bacon flank salami brisket chuck. Tail shoulder turducken, pork loin ground round strip steak short loin turkey. Meatball tail ground round, bresaola swine tri-tip pastrami turkey drumstick leberkas pork belly shank ball tip strip steak short ribs.

  section
    h2 Rules of thumb

    p.text-left <strong>12 words</strong> per line
    p.text-left Around <strong>50-60</strong> to at most <strong>75 characters</strong>
    p.text-left Otherwise the length makes it difficult to get an idea of <strong>where the line starts and ends</strong>

    p.source
      a(href="http://ux.stackexchange.com/questions/3618/ideal-column-width-for-paragraphs-online") ux.stackexchange.com

  section(data-state="lab")
    h2 Lab: Multicolumn
    p Displaying text in multiple columns

  section
    h2 Mobile devices
    pre
      code.
        #{'<link rel="stylesheet" media="handheld" />'}

  section
    mixin browserSupport('All', '3.5+', 'All', '9+', '9.5+')
    h2 New media queries

    pre
      code.
        @media only screen and (max-width: 600px) {
          .class {
            background: #ccc;
          }
        }
    pre
      code.
        #{'<link rel="stylesheet" href="small.css" media="only screen and (max-width: 600px)" />'}

  section
    h2 What is a pixel?
    p Two<span style="color:red">*</span> kinds of pixels

    p.text-left <strong>CSS pixels</strong> (abstract)
    p.text-left <strong>Device pixels</strong> (or physical pixels)

  section
    h2 What is a pixel?
    ul(style="float: left;")
      li
        p Usually<span style="color:red">*</span>:
        p &emsp; 1 CSS px = 1 device pixel
      li
        p Zooming in (200%):
        p &emsp; 0.5 CSS px = 1 device pixel
      li
        p Zooming out (50%):
        p &emsp; 2 CSS px = 1 device pixel
    img(style="float: right;", width="200", src="assets/img/pixels.svg")

  section
    h2 Viewport
    p Available space for the layout
    p AKA browser window's width
    img(src="assets/img/viewport.svg", width="500")

  section
    h2 Mobile viewports
    p <del>Available space for the layout</del>
    p <del>AKA browser window's width</del>
    img(src="assets/img/viewport.svg", width="500")

  section
    h2 Mobile viewports
    p <del>Available space for the layout</del>
    p <del>AKA browser window's width</del>
    img(src="assets/img/viewport-mobile.svg", width="500")

  section
    h2 Initial size
    p Disable automatic resizing

    pre
      code.
        #{'<meta name="viewport" content="width=device-width,initial-scale=1.0">'}
    pre
      code.
        body {
          -webkit-text-size-adjust: 100%;
        }

  section
    h2 Pixels again
    p (<span style="color:red">*</span>)  1 CSS pixel = 0.5-1.5 device pixels
    p An additional layer between CSS px and device px
    img(src="assets/img/viewport-mobile-resized.svg", width="200", style="display: inline-block;")
    ul.fragment.small-text(style="display: inline-block;")
      li
        p "Low-cost" smartphone:
        p Screen 240x320, reports 320x427
      li
        p High density display:
        p Screen 640x960, reports 320x480

  section
    h2 High density displays
    p Pixel density above 200 PPI
    p.small-text iPhone4 (326), iPad3 (264),<br> Galaxy Nexus (316), Galaxy SIII (306)

  section
    h2 High density displays
    p Prefixed media query <br> <strong>device-pixel-ratio</strong>
    pre
      code.
        @media only screen and (min--moz-device-pixel-ratio: 2),
        only screen and (-o-min-device-pixel-ratio: 2/1),
        only screen and (-webkit-min-device-pixel-ratio: 2),
        only screen and (min-device-pixel-ratio: 2) {

           /* Custom CSS here */

        }

  section
    h2 Other media queries
    p Not very useful/consistent
    p.small-text.text-left @media: <strong>device-width</strong>, <strong>orientation</strong>, <strong>aspect-ratio</strong> <br>
    p.small-text.text-left #{'<meta name="viewport">'} : <strong>target-densitydpi</strong>


  section(data-state="lab")
    h2 Lab: Media Queries
    p Use media queries with CSS

  section
    section
      h2 Responsive design
      #ex-rwd-large
        iframe(src="assets/html/rwd.html", width="95%", height="400px")

    section
      h2 Responsive design
      #ex-rwd
        iframe(src="assets/html/rwd.html", width="65%", height="400px")

    section
      h2 Responsive design
      #ex-rwd
        iframe(src="assets/html/rwd.html", width="35%", height="400px")

  section
    h2 Fluid grids
    p Keep everything relative
    .row-fluid
      .span5.row-fluid.offset1
        .span8
          div(style="background-color:#f5f0f0;\
            height: 200px;")
        .span4
          div(style="background-color:#f0f5f0;\
            height: 250px;")
      .span2(style="background: url(assets/img/arrow.svg) no-repeat center center;\
        background-size: 80%;\
        height: 200px")

      .span3.row-fluid
        .span8
          div(style="background-color:#f5f0f0;\
            height: 200px;")
        .span4
          div(style="background-color:#f0f5f0;\
            height: 250px;")

  section
    h2 Fluid grids
    p Keep everything relative

    ul
      li <strong>Percentages for lengths</strong> (beware of the margin/padding different behaviors)

      li Limit the flexibility with <strong>max/min-width or overflow</strong>

    pre
      code.
        .container {
          max-width: 940px;
        }

        .two-columns {
          width: 46%;
          margin-left: 2%;
        }
  section
    h2 Flexible images
    .row-fluid#fluid-example-2
      style
        #fluid-example-2 img {
          min-width: 30px;
          max-width: 100%;
        }
      .span5.row-fluid.offset1
        .span8
          div(style="background-color:#f5f0f0;")
            img(src="assets/img/blank-image.svg", width="80%"
              style="")
        .span4
          div(style="background-color:#f0f5f0;")
            img(src="assets/img/blank-image.svg", width="70%",
              style="")
      .span2(style="background: url(assets/img/arrow.svg) no-repeat center center;\
        background-size: 80%;\
        height: 200px")
      .span3.row-fluid
        .span8
          div(style="background-color:#f5f0f0;\
            height: 200px;")
            img(src="assets/img/blank-image.svg", width="80%"
              style="")
        .span4
          div(style="background-color:#f0f5f0;\
            height: 250px;")
            img(src="assets/img/blank-image.svg", width="70%",
              style="")

  section
    h2 Flexible images
    p Percentages for media sizes, max-width: 100%
    .row-fluid
      .span3(style="position: relative;")
        div(style="background: #f33;\
          height: 300px;\
          width: 80%;\
          position: absolute;\
          z-index: -1;")
        img(src="assets/img/blank-image.svg",
          width="100%",
          style="display: block;")
      .span3(style="position: relative;")
        div(style="background: #f33;\
          height: 300px;\
          width: 100%;\
          position: absolute;\
          z-index: -1;")
        img(src="assets/img/blank-image.svg",
          width="100%",
          style="display: block;")
      .span3.offset1(style="position: relative;")
        div(style="background: #3f3;\
          height: 300px;\
          width: 100%;\
          position: absolute;\
          z-index: -1;")
        img(src="assets/img/blank-image.svg",
          width="60%",
          style="display: block;")
      .span2(style="position: relative;")
        div(style="background: #3f3;\
          height: 300px;\
          width: 100%;\
          position: absolute;\
          z-index: -1;")
        img(src="assets/img/blank-image.svg",
          width="100%",
          style="display: block;")

  section
    section
      h2 Flexible images
      p Center background

      pre
        code.
          .illustration {
            background: url(its-cold.png) no-repeat 50% 0;
          }

    section
      h2 Flexible images
      p Center background

      iframe(src="assets/html/cropped-bg.html", width="600", height="400")
      a(href="http://commons.wikimedia.org/wiki/File:3months-old_crossbreed_cats.jpg").source Picture from Wikimedia Commons
    section
      h2 Flexible images
      p Center background

      iframe(src="assets/html/cropped-bg.html", width="400", height="400")
    section
      h2 Flexible images
      p Center background

      iframe(src="assets/html/cropped-bg.html", width="200", height="400")

  section
    h2 Responsive images
    p Beware of scaling problems
    p Serve different images for different displays

  section
    h2 Responsive images
    p Using cookies

    pre
      code.
        #{'<img src="picture.jpg" data-large="picture-large.jpg">'}

        document.cookie ="device_dimensions="+screen.width+"x" + screen.height;

  section
    h2 Responsive images
    p Using noscript

    pre
      code.
        #{'<noscript '}
          data-img="picture-default.jpg"
          data-imgsmall="picture-small.jpg">
          &lt;img src="picture-default.jpg">
        #{'</noscript>'}

        $('noscript[data-img]').replaceWith(getImage(this));

  section
    h2 Media queries
    p When fluid is not enough
    iframe(src="assets/html/rwd.html", width="70%", height="400px")
    iframe(src="assets/html/rwd.html", width="30%", height="400px")


  section
    h2 Screen sizes
    img(src="assets/img/screen-stats.png")

  section
    h2 Goldilocks approach
    .row-fluid#goldilocks-example
      style
        #goldilocks-example p {
          border: 1px #333 solid;
          height: 200px;
          line-height: 200px;
          background-color: #ccc;
        }

      .span4(style="margin: 0;")
        p(style="width:30%; margin:0 34%;") Small
      .span4
        p(style="width:50%; margin:0 24%;") Right
      .span4
        p(style="width:70%; margin:0 14%;") Big
    p Keep it <strong>simple</strong>

  section
    h2 RWD with Bootstrap
    pre
      code.
        #{'<'}div class="<strong>row-fluid</strong>">
            #{'<div class="span2">Fee</div>'}
            #{'<div class="span2">Fi</div>'}
            #{'<div class="span2">Fo</div>'}
            #{'<div class="span3 offset3">Fum!!</div>'}
        #{'</div>'}
    pre
      code.
        .row-fluid .span2 {
          width: 14.52991452991453%;
        }
  section
    section
      h2 RWD with Bootstrap
      p Several media queries implemented

      p 0 â 480px â 768px â 980px â 1200px


      pre
        code.
          #{'<'}link href="<strong>bootstrap-responsive.css</strong>" rel="stylesheet">

      #ex-bootstrap-rwd
        style
          #ex-bootstrap-rwd [class^="span"] {
            height: 50px;
            border-radius: 4px;
            background-color: #ccc;
          }
        .row-fluid
          .span2 Fee
          .span2 Fi
          .span1.offset2 Fo
          .span4 Fum!
    section
      h2 RWD with Bootstrap
      p Several media queries implemented

      p 0 â 480px â 768px â 980px â 1200px


      pre
        code.
          #{'<'}link href="<strong>bootstrap-responsive.css</strong>" rel="stylesheet">

      #ex-bootstrap-rwd-2
        style
          #ex-bootstrap-rwd-2 [class^="span"] {
            height: 50px;
            border-radius: 4px;
            background-color: #ccc;
            float: none;
            width: 100%;
            margin-bottom: 5px;
            margin-left: 0;
          }
        .row-fluid
          .span2 Fee
          .span2 Fi
          .span1.offset2 Fo
          .span4 Fum!

  section(data-state="lab")
    h2 Lab: Responsive design
    p Make a web page responsive


  section#less
    h2 CSS preprocessors

    pre
      code.
        @redBlood: #dde0514;
        @size: 300px;

        .class {
          background-color: @redBlood;
          width: @size;
        }

  section
    h2 LESS
    p How to (with node)

    pre
      code.
        //Installing
        npm install less
    pre
      code.
        //Compile to CSS
        lessc styles.less styles.css
    pre
      code.
        //Client-side compiling

        #{'<link rel="stylesheet/less" type="text/css" href="styles.less">'}

        #{'<script src="less.js" type="text/javascript"></script>'}

  section
    h2 LESS
    p Operations and default functions

    pre
      code.
        @moreRed: @color + #A00;

        @oneHalf : @size / 2;
        @shorter : @length â 3em;

        // Color functions
        mix(@color1, @color2)
        darken(@color, 20%)

        // Math functions:
        floor(@size / 2)

  section
    h2 LESS
    p Mixins and parametric mixins

    pre
      code.
        .stuff {
          background-color: @redBlood;
          width: @size;
        }

        .coolShadow(@blur) {
          -moz-box-shadow: 0 0 @blur rgba(0, 0, 0, .7);
          -webkit-box-shadow: 0 0 @blur rgba(0, 0, 0, .7);
          box-shadow: 0 0 @blur rgba(0, 0, 0, .7);
        }

        #footer {
          .stuff;
          .coolShadow(3px);
        }
    pre
      code.
        #footer {
          background-color: #f00;
          width: 100px;
          -moz-box-shadow: 0 0 3px rgba(0, 0, 0, .7);
          ...
        }

  section
    h2 LESS
    p Nesting

    .row-fluid
      pre.span6
        code.
          .content {
            font-size: 14px;
            ul {
              list-style: none;
              & > li {
                display: block;
              }
            }
          }
      pre.span6
        code.
          .content {
            font-size: 14px;
          }
          .content ul {
            list-style: none;
          }

          .content ul > li {
            display: block;
          }

  section
    h2 LESS
    p Guarded mixins

    pre
      code.
        .heading(@bgColor) when (lightness(@bgColor) < 50%) {
          color: white;
        }

        .heading(@bgColor) when (lightness(@bgColor) >= 50%) {
          color: black;
        }

  //- section
  //-   h2 3L ?
  //-   p LESS framework

  //-   pre
  //-     code.
  //-       @import âcompass";

  //-       // CSS3 mixins
  //-       .container {
  //-         @include background-image(linear-gradient(#FFF, #000));

  //-         @include transition-property(color);
  //-         @include transition-duration(.5s)
  //-         â¦
  //-       }

  //-       // Sprite generation
  //-       $icons: sprite-map("icons/*.png");
  //-       .links{
  //-         background: $icons;
  //-       }

  section
    h2 More syntatic sugar

    .row-fluid
      .span6
        p Sass
        pre
          code.
            @import âcompass";

            $myBlue = #12F;

            @mixin .my-background($color) {
              background-color: $color + #100;
            }

            .class {
              @include .my-background($myBlue)
              div {
                width: 100px;
              }
            }
      .span6
        p Stylus
        pre
          code.
            @import âlayout.styl";

            @import âlayout.styl";

            myBlue = #12F

            my-background(color)
              background-color: color + #100

            .class
              my-background(myBlue)
              div
                width: 100px

  section(data-state="lab")
    h2 Lab: LESS
    p Refactor a CSS stylesheet


  section#sass
    h2 CSS preprocessors

    pre
      code.
        $redBlood: #dde0514;
        $size: 300px;

        .class {
          background-color: $redBlood;
          width: $size;
        }

  section
    h2 Sass
    p How to (with Ruby)

    pre
      code.
        // Compile to CSS
        sass styles.scss styles.css

        // Watch your SCSS
        sass âwatch styles.scss

  section
    h2 Sass
    p Operations and default functions

    pre
      code.
        $moreRed = $color + #A00;

        $oneHalf : $size / 2;
        $shorter : $length â 3em;

        // Color functions
        mix($color1, $color2)
        darken($color, 20%)

        // Math functions:
        floor($size / 2);

  section
    h2 Sass
    p Mixins and paremetric mixins

    pre
      code.
        @mixin stuff {
          background-color: $redBlood;
          width: $size;
        }

        @mixin coolShadow($blur) {
          -moz-box-shadow: 0 0 $blur rgba(0, 0, 0, .7);
          -webkit-box-shadow: 0 0 $blur rgba(0, 0, 0, .7);
          box-shadow: 0 0 $blur rgba(0, 0, 0, .7);
        }

        #footer {
          @include stuff;
          @include coolShadow(3px);
        }

    pre
      code.
        #footer {
          background-color: #f00;
          width: 100px;
          -moz-box-shadow: 0 0 3px rgba(0, 0, 0, .7);
          ...
        }

  section
    h2 Sass
    p Custom functions

    pre
      code.
        @function moreGreen($color) {
          @return $color + #030;
        }


        #footer {
          background-color: moreGreen(#576);
        }

    pre
      code.
        #footer {
          background-color: #5a6;
        }


  section
    h2 Sass
    p Nesting

    .row-fluid
      pre.span6
        code.
          .content {
            font-size: 14px;
            ul {
              list-style: none;
              & > li {
                display: block;
              }
            }
          }

      pre.span6
        code.
          .content {
            font-size: 14px;
          }

          .content ul {
            list-style: none;
          }

          .content ul > li {
            display: block;
          }

  section
    h2 Sass
    p Namespaces

    .row-fluid
      pre.span6
        code.
          .content {
            background: {
              color: white;
              image: url('nice-bg.png');
              size: cover;
            }
          }

      pre.span6
        code.
          .content {
            background-color: white;
            background-image: url("nice-bg.png");
            background-size: cover;
          }


  section
    h2 Sass
    p Class extension

    .row-fluid
      pre.span6
        code.
          .button {
            width: 20px;
            border-radius: 2px;
          }

          .navbar .button {
            color: white;
          }

          .big-button {
            @extend .button;
            width: 30px;
          }

      pre.span6
        code.
          .button, .big-button {
            width: 20px;
            border-radius: 2px;
          }

          .navbar .button, .navbar .big-button {
            color: white;
          }

          .big-button {
            width: 30px;
          }

  section
    h2 Sass
    p Idented syntax

    .row-fluid
      pre.span6
        code.
          @mixin table-base {
            th {
              text-align: center;
              font-weight: bold;
            }
            td, th {padding: 2px}
          }

          @mixin left($dist) {
            float: left;
            margin-left: $dist;
          }

          #data {
            @include left(10px);
            @include table-base;
          }

      pre.span6
        code.
          =table-base
            th
              text-align: center
              font-weight: bold
            td, th
              padding: 2px

          =left($dist)
            float: left
            margin-left: $dist

          #data
            +left(10px)
            +table-base

  section
    h2 Sass
    p Control directives

    pre
      code.
        .class {
          @if $type == ocean {
            color: blue;
          }
        }

        @for $i from 1 through $number {
          .item-\#{$i} {
            width: 500px/$i;
          }
        }

  section
    h2 Compass
    p Sass framework

    pre
      code.
        @import âcompass";

        // CSS3 mixins
        .container {
          @include background-image(linear-gradient(#FFF, #000));

          @include transition-property(color);
          @include transition-duration(.5s)
          â¦
        }

        // Sprite generation
        $icons: sprite-map("icons/*.png");
        .links{
          background: $icons;
        }


  section
    h2 Compass
    p Sass framework

    pre
      code.
        @import âcompass";

        // Text replacement
        li.hidden {
          @import replace-text($image);
        }

        // Image dimension
        div {
          width: image-width($image) * 1.2;
        }

        // Sticky footer
        @import sticky-footer(60px, "#my_footer");

  section
    h2 More syntactic sugar

    .row-fluid
    .span6
      p LESS:
      pre
        code.
          @import âbootstrap.less";

          @myBlue = #12F;

          .my-background(@color) {
            background-color: @color + #100;
          }

          .class {
            .my-background(@myBlue)
            div {
              width: 100px;
          }
    .span6
      p Stylus:
      pre
        code.
          @import âlayout.styl";

          myBlue = #12F

          my-background(color)
            background-color: color + #100

          .class
            my-background(myBlue)
            div
              width: 100px

  section(data-state="lab")
    h2 Lab: Sass
    p Refactor a CSS stylesheet with Compass

  section
    h2 Keep sharp
    ul
      li
        a(href="http://html5please.com") HTML5 Please
      li
        a(href="http://caniuse.com") When can I use...
      li
        a(href="https://developer.mozilla.org/") Mozilla Developer Network
      li
        a(href="http://www.quirksmode.org/") QuirksMode.org
      li
        a(href="http://csslint.net/") CSS LINT
      li
        a(href="http://css3clickchart.com/") CSS3 Click Chart
      li
        a(href="http://www.browsersupport.net") browsersupport.net
